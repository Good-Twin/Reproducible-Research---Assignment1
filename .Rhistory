q()
help
help(summary)
?summary
swirl()
swirl
library(swirl)
swirl()
exit
bye()
library(swirl)
swirl
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
info()
play()
gather(students, sex, count)
gather(students, sex, count, grade)
nxt()
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(res, sex_class, c("sex","class"))
editor = "internal"
swirl()
editor = "internal"
swirl()
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
separate(res, sex_class, c("sex","class"))
?separate
separate(res, sex_class, c("sex","class"))
editor = "internal"
swirl()
options(editor = "internal")
swirl()
students2
gather(students2,sex_class,count, -grade)
submit()
res <- gather(students2,sex_class,count, -grade)
separate( res, sex_class, c("sex", "class"))
gather(students2,sex_class,count, -grade) %>%
separate( sex_class, c("sex", "class"))
submit()
res <- gather(students2, sex_class, count, -grade)
submit()
reset()
reset()
submit()
info()
nxt()
swirl()
submit()
submit()
students3
gather(students3, name, test, class1:class5, na.rm = TRUE)
gather(students3, -name, -test, class1:class5, na.rm = TRUE)
gather(students3, class1:class5, na.rm = TRUE)
gather(students3, name, test, class1:class5, na.rm = TRUE)
submit()
submit()
?spread
test <- gather(students3, name, test, class1:class5, na.rm = TRUE)
spread(test, test, test)
test1 <- gather(students3, name, test, class1:class5, na.rm = TRUE)
spread(test1, test, grade)
test1
test1 <- gather(students3, class, grade, class1:class5, na.rm = TRUE)
spread(test1, test, grade)
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passe, failed)
bind_rows(passed, failed)
sat
select(sat,-contains("total"))
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
kk
select(-contains("total")) %>%
gather(part_sex, count, -score_range)
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
ff
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range)
submit()
submit()
submit()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")
)
submit()
submit()
which?
22
?which
LETTERS
which(LETTERS)
which(LETTERS)
read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
my_df <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
my_df$VAL
subset(my_df, AGS == 6, ACR == 3)
subset(my_df, AGS == 6)
subset(my_df, ACR == 3)
subset(my_df, AGS == 6, ACR == 3)
subset(my_df, AGS == 6 & ACR == 3)
agricultureLogical <- subset(my_df, AGS == 6 & ACR == 3)
which(agricultureLogical)
which(my_df$AGS == 6 & my_df$ACR == 3)
library('ReadImages')
install.packages("jpeg")
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'acs.csv')
asc <- read.csv('acs.csv')
head(asc)
names(asc)
?strsplit
l <- strsplit(names(asc),'wgtp', fixed = TRUE)
l[[123]]
gdp <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv')
view(gdp)
View(gdp)
View(gdp)
gdp <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', skip=4)
gdp$x.4[:190]
gdp$x.4[190]
gdp$x.4[1:190]
gdp$x.4
gdp$X.4
gdp$X.4[1:190]
gdp <- gdp$X.4[1:190]
gdp
gdp <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', skip=4)
gdp$X.4[190]
values <- gdp[4,]
values
values <- gdp[1:190,5]
gdp <- gdp$X.4[205]
gdp$X.4[205]
gdp$X.4
gdp <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', skip=4)
gdp$X.4
gdp_tbl = tbl_df(gdp)
library(dplyr)
gdp_tbl = tbl_df(gdp)
gdp_table
gdp_tbl
filter(gdp_tbl, X.4!='..')
gdp_filter <- filter(gdp_tbl, X.4!='..')
View(gdp_filter)
gdp_filter <- filter(gdp_tbl, X.4!='')
gdp_filter <- filter(gdp_tbl, X.4!='' & X.4!='..')
values <- select(gdp_filer, X.4)
values <- select(gdp_filter, X.4)
sapply(values,',',sub,)
mutate(values, gdp_formated = sub(X.4,',',''))
?sub
?gsub
mutate(values, gdp_formated = gsub(X.4,',',''))
sub('16,244,600',',','')
gsub('16,244,600',',','')
gsub("16,244",',','')
gsub(",","","16,244,6002)
fff
fffffff=)""
""
gsub(",","","16,244,6002")
mutate(values, gdp_formated = gsub(',','',X.4))
avg(values[2])
values[2]
values[1]
values <- mutate(values, gdp_formated = gsub(',','',X.4))
values[2]
mean(values[2])
mean(as.numeric(as.character(values[2])))
mean(as.numeric(values[2]))
mean(as.numeric(as.character(values[2])))
View(as.numeric(as.character(values[2])))
View(values[2])
as.character(values[2])
View(as.character(values[2]))
values <- mutate(values, gdp_formated = as.numeric(as.character(gsub(',','',X.4)))
)
view(values)
View(values)
mean(select(values, gdp_formated)
)
select(values, gdp_formated)
mean(values$gdp_formated)
View(gdp)
gdp_filter <- filter(gdp_tbl, X.4!='' & X.4!='..' & X.1!='')
View(gdp_filter)
values <- mutate(values, gdp_formated = gsub(',','',X.4))
mean(values$gdp_formated)
values <- mutate(values, gdp_formated = as.numeric(as.character(gsub(',','',X.4)))
)
mean(values$gdp_formated)
values <- select(gdp_filer, X.4)
values <- select(gdp_filter, X.4)
values <- mutate(values, gdp_formated = as.numeric(as.character(gsub(',','',X.4))))
mean(values$gdp_formated)
countryNames <- select(gdp_filter, X.3)
grep("^United",countryNames)
grep("*United",countryNames)
grep("*United",countryNames)
grep("United$",countryNames)
View(countryNames)
countryNames <- as.character(select(gdp_filter, X.3))
countryNames <- select(gdp_filter, X.3)
grep("^United", select(gdp_filter, X.3))
grep("*United", select(gdp_filter, X.3))
countryNames <- gdp&X.3
countryNames <- gdp$X.3
grep("*United", select(gdp_filter, X.3))
View(gdp)
grep("*United",countryNames)
grep("^United",countryNames)
grep("United$",countryNames)
>
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 4)
gdp_tbl = tbl_df(gdp)
gdp <- filter(gdp_tbl, X.4!='' & X.4!='..' & X.1!='')
edu <- read.csv('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv')
edu_tbl <- tbl_df(edu)
gdp_edu <- merge(gdp, edu, by.x="X", by.y="CountryCode", all = FALSE)
View(gdp_edu)
grep("Fiscal year end: June*",gdp_edu$Special.Notes)
count(grep("Fiscal year end: June*",gdp_edu$Special.Notes))
length(grep("Fiscal year end: June*",gdp_edu$Special.Notes))
library(quantmod)
import("quantmod")
import.package("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
grep("'*2012*",sampleTimes)
length(grep("'*2012*",sampleTimes))
length(grep("'2012*",sampleTimes))
sampleTimes
year(sampleTimes)
library(lubridate)
library(swirl)
swirl()
sat
options(editor = "internal")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
bye()
year(sampleTimes)
sampleTimes <- tbl_df(sampleTimes)
grep('2012*',year(sampleTimes))
length(grep('2012*',year(sampleTimes)))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
grep('2012*',year(sampleTimes))
grep('2015*',year(sampleTimes))
years <- year(sampleTimes)
filter(years, years = 2012)
typeOf(sampleTimes)
typeof(sampleTimes)
data.frame(sampleTimes)
sampleTimes <- tbl_df(data.frame(sampleTimes))
names(sampleTimes)
View(sampleTimes)
filter(sampleTimes, year(sampleTimes) = 2012)
filter(sampleTimes, year(sampleTimes) == 2012)
length(filter(sampleTimes, year(sampleTimes) == 2012))
nchar(filter(sampleTimes, year(sampleTimes) == 2012))
times2012<-filter(sampleTimes, year(sampleTimes) == 2012)
wday(times2012[1])
times2012[1]
times2012[[1]]
times2012[,1]
times2012<-filter(sampleTimes, year(sampleTimes) == 2012 $ wday(sampleTimes) == 2)
times2012<-filter(sampleTimes, wday(sampleTimes) == 2)
times2012<-filter(times2012, year(sampleTimes) == 2012)
times2012<-filter(sampleTimes, year(sampleTimes) == 2012 & wday(sampleTimes) == 2)
wine = read.csv("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/wine.csv")
str(wine)
model = lm(Price ~ AGST, data = wine)
summary(model)
model$residuals
SSE = sum(model$residuals^2)
SSE
model2 ) lm(Price ~ AGST + HarvestRain, data=wine)
model2 = lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)
SSE = sum(model2$residuals^2)
SSE
model2 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model2)
SSE = sum(model3$residuals^2)
SSE = sum(model2$residuals^2)
SSE
model2 = lm(Price ~ HarvestRain + WinterRain, data=wine)
summary(model2)
model4 = lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model4)
model5 = lm(Price ~ AGST + HarvestRain + WinterRain + Age, data=wine)
summary(model5)
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine)
cor(wine$WinterRain, wine$HarvestRain)
wineTest = read.csv("https://d37djvu3ytnwxt.cloudfront.net/asset-v1:MITx+15.071x_3+1T2016+type@asset+block/wine_test.csv")
str(wineTest)
predictTest= predict(model4, newdata=wineTest)
predictTest
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
swirl
library(swirl)
swirl
swirl()
library('swirl')
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
act <- read.csv("activity.csv", sep=",", header=TRUE)
act_sum <- summarise(group_by(act, date), steps_per_day= sum(steps))
setwd("~/Weiterbildung/Data Science Specialisation/05_Reproducible Research/Assignment 1")
library(dplyr)
act <- read.csv("activity.csv", sep=",", header=TRUE)
act_sum <- summarise(group_by(act, date), steps_per_day= sum(steps))
View(act_sum)
act_sum <- mutate(group_by(act_sum, date)
, step_mean = mean(steps_per_day,na.rm=TRUE)
, step_median = mean(steps_per_day,na.rm=TRUE))
act_means <- summarise(group_by(act, interval), steps_median= median(steps, na.rm=TRUE))
View(act_means)
act_cleaned <- cbind(act,act_means)
View(act_cleaned)
rename(act_means, "interval"="key")
rename(act_means, c("interval"="key")
)
rename(act_means, interval=key)
rename(act_means, interval="key")
rename(act_means, interval=key)
rename(act_means, key=interval)
act_means <-rename(summarise(group_by(act, interval), steps_median= median(steps, na.rm=TRUE))))
act_means <-rename(summarise(group_by(act, interval), steps_median= median(steps, na.rm=TRUE)))
View(act_means)
act_means <-rename(summarise(group_by(act, interval), steps_median= median(steps, na.rm=TRUE)), key=interval)
View(act_means)
act_cleaned <- cbind(act,act_means, by.x="interval", by.y="key")
View(act_cleaned)
act_cleaned <- cbind(act,act_means, by.x=interval, by.y=key)
act_cleaned <- cbind(act,act_means, by.x=act$interval, by.y=act_means$key)
View(act_cleaned)
act_cleaned  <-- act_cleaned %>%
group_by(interval) %>%
mutate(steps = ifelse(is.na(steps)
, step_mean
, steps)
)
act_cleaned  <-- act_cleaned %>%
group_by(interval) %>%
mutate(steps = ifelse(is.na(steps)
, step_median
, steps)
)
act_cleaned  <-- act_cleaned %>%
group_by(interval) %>%
mutate(steps = ifelse(is.na(steps)
, steps_median
, steps)
)
act_cleaned <- group_by(act_cleaned, steps)
act_cleaned <- group_by(act_cleaned, interval)
act_cleaned <- group_by(act_cleaned, interval)
View(act_cleaned)
act_cleaned <- cbind(act,act_means, by.x=act$interval, by.y=act_means$key)
View(act_cleaned)
act_cleaned <- group_by(act_cleaned, interval)
View(act_cleaned)
act_cleaned <- mutate(act_cleaned, steps = ifelse(is.na(steps),steps_median, steps))
View(act_cleaned)
